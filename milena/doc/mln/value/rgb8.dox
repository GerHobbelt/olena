// This file is necessary to help doxygen finding all the methods
// related to the corresponding typedef.

namespace mln
{
  namespace value
  {
    struct rgb8
      : rgb<8>
    {
    public:
      /// Constructor without argument.
      rgb8();

      /// Constructor from component values.
      rgb8(int r, int g, int b);

      /// Constructor from a algebra::vec.
      rgb8(const algebra::vec<3, int>& rhs);
      /// Constructor from a algebra::vec.
      rgb8(const algebra::vec<3, unsigned>& rhs);
      /// Constructor from a algebra::vec.
      rgb8(const algebra::vec<3, int_u<n> >& rhs);
      /// Constructor from a algebra::vec.
      rgb8(const algebra::vec<3, float>& rhs);

      /// Constructor from literal. rgb8(255,255,255)
      rgb8(const mln::literal::white_t&);
      /// Constructor from literal. rgb8(0,0,0)
      rgb8(const mln::literal::black_t&);

      /// Constructor from literal.
      rgb8(const mln::literal::light_gray_t&);
      /// Constructor from literal.
      rgb8(const mln::literal::medium_gray_t&);
      /// Constructor from literal.
      rgb8(const mln::literal::dark_gray_t&);

      /// Constructor from literal.
      rgb8(const mln::literal::red_t&);
      /// Constructor from literal.
      rgb8(const mln::literal::blue_t&);
      /// Constructor from literal.
      rgb8(const mln::literal::green_t&);
      /// Constructor from literal.
      rgb8(const mln::literal::brown_t&);
      /// Constructor from literal.
      rgb8(const mln::literal::lime_t&);
      /// Constructor from literal.
      rgb8(const mln::literal::orange_t&);
      /// Constructor from literal.
      rgb8(const mln::literal::pink_t&);
      /// Constructor from literal.
      rgb8(const mln::literal::purple_t&);
      /// Constructor from literal.
      rgb8(const mln::literal::teal_t&);
      /// Constructor from literal.
      rgb8(const mln::literal::violet_t&);
      /// Constructor from literal.
      rgb8(const mln::literal::cyan_t&);
      /// Constructor from literal.
      rgb8(const mln::literal::magenta_t&);
      /// Constructor from literal.
      rgb8(const mln::literal::yellow_t&);
      /// Constructor from literal.
      rgb8(const mln::literal::olive_t&);
    }
  }
}
