namespace internal
{

  // Generic case, whatever the image value and domain
  // types.
  template <typename I, typename N>
  mln_concrete(I)
  erosion_tolerant_dispatch(trait::image::kind::any,
			    trait::image::speed::any,
			    const I& input, const N& nbh,
			    unsigned rank)
  {
    return impl::generic::erosion_tolerant(input,
					   nbh,
					   rank);
  }

  // The image has bool values and is defined on a box.
  template <typename I, typename N>
  mln_concrete(I)
  erosion_tolerant_dispatch(trait::image::kind::logic,
  			    trait::image::speed::fastest,
			    const I& input, const N& nbh,
			    unsigned rank)
  {
    return
     impl::erosion_tolerant_on_set_fastest(input,
					   nbh,
					   rank);
  }


  // Dispatch entry point.
  template <typename I, typename N>
  inline
  mln_concrete(I)
  erosion_tolerant_dispatch(const Image<I>& input,
			    const Neighborhood<N>& nbh,
			    unsigned rank)
  {
    return
     erosion_tolerant_dispatch(mln_trait_image_kind(I)(),
			       mln_trait_image_speed(I)(),
			       exact(input),
			       exact(nbh),
			       rank);
  }

} // end of namespace mln::internal
