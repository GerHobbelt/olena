#! /bin/sh

# Copyright (C) 2007, 2009 EPITA Research and Development Laboratory
# (LRDE)
#
# This file is part of Olena.
#
# Olena is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation, version 2 of the License.
#
# Olena is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Olena.  If not, see <http://www.gnu.org/licenses/>.

## FIXME: Don't use `echo -n', as echo's options are not portable.
##
## http://www.gnu.org/software/autoconf/manual/html_node/Limitations-of-Builtins.html#Limitations-of-Builtins
##
## As an ugly workaround, use `printf' instead.  The right approach
## would be to only emit lines ended with newlines.
ECHO_N=printf

# Use the C locale to have a deterministic sort.
export LC_ALL=C

test $# -eq 1 || { echo "Usage: $0 <mln path>" && exit 1; }

## FIXME: Ouch!  Using `find' properly can probably save us some pipes,
## forks and characters here.
HEADERS=`find $1 -name "*.hh" | grep -vE "*.spe.hh" | grep -v "mln/core/concept/doc" | sort | sed -e 's/.*\/mln\/\(.*\)/mln\/\1/g' | sed 's/\.\.\/\.\.\///g'`

output=unit-tests.mk

rm -f "$output"
rm -f mln_*.cc

# Build unit-tests.mk.
echo "## Generated by $0, do not modify." >"$output"
echo >>"$output"
$ECHO_N "check_PROGRAMS = " >>"$output"

for i in $HEADERS; do
    FILE_CC=`echo $i | sed 's/[/.]/_/g' | sed 's/_hh/\.cc/g'`

    # Build .cc.
    cat > $FILE_CC << EOF
// Unit test for $i.
// Generated by $0, do not modify.

// Include the file twice, so we detect missing inclusion guards.
#include <$i>
#include <$i>

int main()
{
  // Nothing.
}
EOF

    # Build unit-tests.mk.
    TARGET=`echo "${FILE_CC}" | sed 's/\.cc//'`
    echo " \\" >>"$output"
    $ECHO_N "${TARGET}" >>"$output"
done

# Build "$output".
echo "" >>"$output"
echo "" >>"$output"
for i in $HEADERS; do
    FILE_CC=`echo $i | sed 's/[/.]/_/g' | sed 's/_hh/\.cc/g'`
    NAME=`echo $FILE_CC | sed 's/\.cc//g'`
    echo "${NAME}_SOURCES = $FILE_CC" >>"$output"
done
