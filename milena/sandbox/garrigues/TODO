C R core/box1d.hh
C R core/dpoint1d.hh
C R core/image1d_b.hh
INUTILE R core/line1d.hh
C R core/neighb1d.hh
C R core/pixter1d_b.hh
C R core/point1d.hh
C R core/window1d.hh

R core/win/hline1d.hh		|
R core/win/rectangle1d.hh	|-> C segment1d.hh
R core/win/vline1d.hh		|

C R core/w_window1d_float.hh
C R core/w_window1d_int.hh

C R geom/size1d.hh

C R make/box1d.hh
C R make/dpoint1d.hh
C R make/point1d.hh
C R make/window1d.hh
C R make/w_window1d.hh
C R make/w_window1d_int.hh

no init ./mln/core/cast_image.hh:    typedef cast_image_< tag::value_<T>, tag::image_<I> > skeleton;
no init ./mln/core/decorated_image.hh:    typedef decorated_image< tag::image_<I>, tag::data_<D> > skeleton;
done ./mln/core/image1d_b.hh:    typedef image1d_b< tag::value_<T> > skeleton;
done ./mln/core/image2d_b.hh:    typedef image2d_b< tag::value_<T> > skeleton;
done ./mln/core/image3d_b.hh:    typedef image3d_b< tag::value_<T> > skeleton;
done ./mln/core/image_if.hh:    typedef image_if< tag::image_<I>, tag::function_<F> > skeleton;
no init ./mln/core/interpolated.hh:    typedef interpolated< tag::image_<I> > skeleton;
no init ./mln/core/plain.hh:    typedef plain< tag::image_<I> > skeleton;
no init ./mln/core/rle_image.hh:    typedef rle_image< tag::psite_<P>, tag::value_<T> > skeleton;
no init ./mln/core/safe.hh:    typedef safe_image< tag::image_<I> > skeleton;
no init ./mln/core/sparse_image.hh:    typedef sparse_image< tag::psite_<P>, tag::value_<T> > skeleton;
done ./mln/core/sub_image.hh:    typedef sub_image< tag::image_<I>, tag::pset_<S> > skeleton;
no init ./mln/core/t_image.hh:    typedef t_image< tag::image_<I> > skeleton;
no init ./mln/core/tr_image.hh:    typedef tr_image< T, tag::image_<I> > skeleton;
no init ./mln/pw/image.hh:      typedef image< tag::function_<F>, tag::pset_<S> > skeleton;
./mln/trait/ch_value.hh:      typedef typename I::skeleton skeleton;
./mln/trait/ch_value.hh:      typedef typename impl::ch_value_<skeleton, V>::ret ret;
no init ./mln/value/stack.hh:      typedef stack_image< n, tag::image_<I> > skeleton;
