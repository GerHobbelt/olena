2006-02-14  Roland Levillain  <roland@lrde.epita.fr>

	Fix mlc::is_ok definition.

	* mlc/cmp.hh (mlc::is_ok): Add missing template declarator.

2006-02-14  Roland Levillain  <roland@lrde.epita.fr>

	Add tests for mlc_is_a, mlc_if and mlc_typedef.

	* tests/is_a.cc, tests/if.cc, tests/typedef.cc: New tests.

2006-02-14  Roland Levillain  <roland@lrde.epita.fr>

	Add some documentation and types to Metalic.

	* mlc/cmp.hh: More documentation.
	(is_found, is_not_found, is_ok): New.
	* mlc/implies.hh, mlc/is_a.hh: Fix Doxygen comment.
	* mlc/flags.hh: More documentation.
	(dummy, locked): New.
	From Thierry Géraud.
	* mlc/value.hh: Remove dead code.

2006-02-10  Thierry Geraud  <theo@lrde.epita.fr>

	Add implies, comma, typedef ret handling; then update.

	* mlc/implies.hh: New file.
	* mlc/is_a.hh: Update.
	* mlc/comma.hh: New file.
	* mlc/typedef.hh (in_, in_onlyif_): Rename as...
	(from_, from_only_if_): ...this.
	(mlc_typedef_in, mlc_typedef_in_): New macros.
	(mlc_ret): New macro.

2006-02-09  Thierry Geraud  <theo@lrde.epita.fr>

	Modify slightly the ensure_ and ensure_list_ tools.

	* mlc/wrap.hh (wrap): Rename into...
	(wrap_): ...this.
	* mlc/bool.hh (ensure_item): Rename into...
	(ensure_item_): ...this and add a parameter to ease disambiguation.
	(ensure_list_): Update.
	(documentation): Update.
	* mlc/cmp.hh: Update.

2006-02-07  Thierry Geraud  <theo@lrde.epita.fr>

	Add documentation.

	* mlc/is_a.hh (wrap): Move to...
	* mlc/wrap.hh: ...this new file.
	* mlc/bool.hh (ensure_): Take just one parameter; the former variadic
	version is now handled by...
	(ensure_list_): ...this new class.
	* mlc/typedef.hh: Rename some internals.

2006-01-26  Roland Levillain  <roland@lrde.epita.fr>

	Static `if'.

	* mlc/if.hh: New file.

2006-01-26  Thierry Geraud  <theo@lrde.epita.fr>

	Add mlc::ensure_ and update. .

	* mlc/bool.hh: Update documentation.
	(internal::value_<bool,b>::ret): Rename as...
	(internal::value_<bool,b>::eval): ...this.
	(bool_<true>::ensure_t): Rename as...
	(bool_<true>::internal_ensure_): ...this.
	(internal::ensure_item<i,expr>): New class.
	(internal::none_): Relocate.
	(internal::none_::internal_ensure_): New typedef.
	(ensure_): New class.
	* mlc/value.hh (is_value, is_not_value): Move to...
	* mlc/cmp.hh (is_value, is_not_value): ...here.
	(eq_, neq_): Update static checks.

2006-01-25  Thierry Geraud  <theo@lrde.epita.fr>

	Clean up of core mlc classes and add some documentation.

	A lot of cleanups.  Client concrete classes in mlc are now all
	postfixed by '_'.  For instance, we have and_, int_, and so on.

	* .: New.
	* mlc: New.
	* mlc/type.hh: New.
	* mlc/bool.hh: New.
	(abstract::boolean): New class.
	(bool_): New class.
	(value, true_type, false_type): Rename as...
	(value_, true_, false_): ...these.
	(ors, ands): Rename as...
	(ors_, ands_): ...these.
	(internal): Cosmetic change.
	(is_true, is_false): Remove.
	(true_, false_): New typedef ensure_t.
	* mlc/is_a.hh: New.
	(form): Move in the internal namespace cause names are too long
	for a decent client use.
	* mlc/value.hh: New.
	(value): Rename as...
	(value_): ...this.
	(mlc_internal_decl_unsigned_): New macro.
	(mlc_internal_decl_signed_): New macro.
	(uchar_, ushort_, uint_, ulong_): New classes.
	(schar_, short_, int_, long_): New classes.
	(is_value, is_not_value): New meta-functions.
	* mlc/flags.hh: New.
	(flag): New abstract class.
	(undefined_type, unknown_type, no_type): Rename as...
	(undefined, unknown, none): ...these.
	(not_ok): Remove cause useless.
	* mlc/cmp.hh: New.
	(eq, neq): Rename as...
	(eq_, neq_): ...these.
	(is_found, is_not_found, is_ok): Remove cause irrelevant here.
	(mlc_is_found, mlc_is_not_found): Likewise.
	* mlc/typedef.hh: New.
