2007-04-17  Thomas Moulard  <thomas.moulard@lrde.epita.fr>

	Fix duplicated base bug and errors in morphers.
	* mini-std.cc: Here.

2007-04-11  Thomas Moulard  <thomas.moulard@lrde.epita.fr>

	Fix mini-std tests.
	* mini-std.cc: Fix some old tests and add a new one.

2007-04-10  Thomas Moulard  <thomas.moulard@lrde.epita.fr>

	Improve iterator support.
	* samples/mini-std/cpp2/mini-std.cc: Here.

2007-03-28  Thomas Moulard  <thomas.moulard@lrde.epita.fr>

	Add begin, end, == and =! methods for iterators in mini-std.
	* mini-std.cc: Here.

2007-03-27  Thomas Moulard  <thomas.moulard@lrde.epita.fr>

	Fix iterators in mini-std.
	* mini-std.cc: Here.

2007-03-27  Thomas Moulard  <thomas.moulard@lrde.epita.fr>

	Use SCOOP equipment in mini-std.
	* mini-std.cc: Here.

2007-03-26  Thomas Moulard  <thomas.moulard@lrde.epita.fr>

	Add new mini-std.
	* samples/mini-std/cpp2/mini-std.cc: Here. New.
	* samples/mini-std/cpp2: Here. New.

2007-03-20  Alexandre Abraham  <abraham@lrde.epita.fr>

	Fix mini-oln, add mutable image type and rgb value.

	* samples/mini-oln/mini-oln.cc,
	samples/mini-oln/concept-c++/mini-oln.cc : code for image3d tests,
	new lvalue_t and rvalue_t vtypes for mutable images.

	* samples/mini-oln/mini-oln.cc,
	(oln::Image::rvalue_t) : New typedef.
	(oln::Image) : operator() now return a rvalue_t as it is a read
	only Image by default
	(oln::Image2d), (oln::Image3d) : operator() is now inherited
	from oln::Image.
	(oln::Mutable_Image) : New.
	(oln::Mutable_Image::lvalue) : New typedef.
	(oln::switch_image_base_mutable) : New.
	(oln::image2d) : split impl_op_parens into two versions returning
	rvalue_t and lvalue_t.
	(oln::rgb) : new type.
	(oln::Iterator3d) : New.
	(oln::niter3d) : New.
	(oln::Image3d) : New.

	* samples/mini-oln/concept-c++/mini-oln.cc:
	(oln::concepts::Image::rvalue_t) : New typedef.
	(oln::concetps::Image) : operator() now return a rvalue_t as it is
	a read only Image by default
	(oln::concepts::Mutable_Image) : New.
	(oln::concetps::Mutable_Image::lvalue) : New typedef.
	(oln::image_mutability_switch) : New.
	(oln::image2d) : split impl_op_parens into two versions returning
	rvalue_t and lvalue_t.
	(oln::Iterator3d) : New.
	(oln::niter3d) : New.
	(oln::Image3d) : New.

2007-03-15  Roland Levillain  <roland@lrde.epita.fr>

	Update SCOOP 2 alternative implementation.

	* stc/scoop-alt.hh: Split this file into...
	* stc/scoop-alt.hh, stc/scoop-alt.inc: ...these.
	Catch up with the interface of oln/stc/scoop.hh and
	oln/stc/scoop.hxx.
	* stc/Makefile.am (nobase_stc_HEADERS): Add scoop-alt.inc.
	* tests/scoop-alt.cc: Adjust existing tests.
	(ex8, ex9): New tests.
	(main): Run them.

2007-03-01  Roland Levillain  <roland@lrde.epita.fr>

	Fix mini-oln and its Concept-C++ counterpart.

	* samples/mini-oln/mini-oln.cc,
	(oln::Image_with_neighborhood::niter_t): New typedef.
	(oln::iterator2d::impl_op_point_t)
	(oln::iterator2d::impl_op_paren): Rename as...
	(oln::iterator2d::impl_op_point_type)
	(oln::iterator2d::impl_op_parens): ...this.

	* samples/mini-oln/mini-oln.cc,
	* samples/mini-oln/concept-c++/mini-oln.cc:
	(oln::Image::operator(), oln::Image2d::operator())
	(oln::Image3d::operator()):  Fix the delegations.
	(oln::set_super_type< image_base<E> >::ret): Set to mlc::none.
	(oln::image2d::self_t): New typedef.
	(oln::image2d::point_t, oln::image2d::iter_t)
	(oln::image2d::value_t): Fix typedefs.

	* samples/mini-oln/concept-c++/mini-oln.cc: s/where/requires/
	(needed by recent revisions of SVN ConceptGCC).
	Declare typedefs used
	as virtual types at the beginning of the file
	(concepts): Rename namespace as...
	(oln::concepts): ...this.
	Group together abstractions on the one hand, and implementations
	on the other hand.
	(oln::image_with_nbh): Rename class as...
	(oln::Image_with_neighborhood): ...this.
	(oln::vtypes< Iterator<E> >, oln::vtypes< Image<E> >)
	(oln::vtypes<image_with_nbh>)
	(oln::set_super_type<Image2d>, oln::set_super_type<Image3d>,
	(oln::set_super_type<image_with_nbh>): Remove (useless and
	semantically wrong definitions).
	(oln::Iterator::point_t, oln::Image::point_t, Image::value_t)
	(oln::Image2d::point_t, oln::Image2d::value_t)
	(oln::Image3d::point_t, oln::Image3d::value_t)
	(oln::Image_with_neighborhood::nbh_t)
	(oln::Image_with_neighborhood::niter_t): Fix typedefs.
	(oln::Image::iter_t, oln::Image2d::iter_t, oln::Image3d::iter_t):
	Remove typedefs.
	(oln::Iterator::start, oln::Iterator::next)
	(oln::Iterator::is_valid, oln::Iterator::point_t)
	(oln::Image::has)
	(oln::Image2d::nrows_get, oln::Image2d::ncols_get)
	(oln::Image3d::nrows_get, oln::Image3d::ncols_get)
	(oln::Image3d::nslis_get, oln::Image_with_neighborhood nbh): Fix
	the delegations.

	* samples/mini-oln/concept-c++/mini-oln.cc
	(oln::image_dimension_switch): Inherit oln::Image<E> by default.
	(oln::vtypes< image_base<E> >::point_type)
	(oln::vtypes< image_base<E> >::iter_type)
	(oln::vtypes< image_base<E> >::value_type): Set to stc::abstract.
	(oln::vtypes< image_base<E> >::niter_type)
	(oln::vtypes< image_base<E> >::nbh_type): New typedefs.
	(oln::image_base::point_t, oln::image_base::iter_t)
	(oln::image_base::value_t): Remove typedefs.
	(oln::image_base::operator(), oln::image_base::has): Remove
	methods.
	(oln::image_base::image_base): Add ctor.

	* samples/mini-oln/concept-c++/mini-oln.cc
	(oln::set_super_type<iterator2d>::ret): Set to mlc::none.
	(oln::set_super_type<iterator2d>::start)
	(oln::set_super_type<iterator2d>::next)
	(oln::set_super_type<iterator2d>::is_valid)
	(oln::set_super_type<iterator2d>::operator point_t): Rename as...
	(oln::set_super_type<iterator2d>::impl_start)
	(oln::set_super_type<iterator2d>::impl_next)
	(oln::set_super_type<iterator2d>::impl_is_valid)
	(oln::set_super_type<iterator2d>::impl_op_point_type): ...these.
	(oln::image2d::operator(), oln::image2d::nrows_get)
	(oln::image2d::ncols_get, oln::image2d::has): Rename as...
	(oln::image2d::impl_op_parens, oln::image2d::impl_nrows_get)
	(oln::image2d::impl_ncols_get, oln::image2d::impl_has): Rename as...
	(oln::neighborhood2d): New class.
	(oln::set_super_type< image_morpher<E> >::ret): Set to
	image_base<E>.
	(oln::vtypes< image_morpher<E> >::delegatee_t): Set to
	stc::abstract.
	(oln::image_morpher): Inherit from image_base<E>.
	(oln::image_morpher::delegatee_t): Fix this typedef.
	(oln::set_super_type< image_morpher < plus<I, N> > >): Turn
	into...
	(oln::set_super_type< plus<I, N> >): ...this.
	(oln::vtypes< plus<I, N> >::delegatee_t): Rename as...
	(oln::vtypes< plus<I, N> >::delegatee_type): ...this.
	(oln::vtypes< plus<I, N> >::nbh_type)
	(oln::vtypes< plus<I, N> >::niter_type): New typedefs.
	(oln::plus::self_t, oln::plus::super_t): New typedefs.
	(oln::plus::plus): Pass the equipped image to the ctor of the super
	class.
	(oln::plus::impl_nbh): New accessor.
	(main): Rewrite the test.

	* samples/mini-oln/concept-c++/Makefile.am: Disable mini-oln.

2007-02-15  Thierry GERAUD  <theo@tegucigalpa.lrde.epita.fr>

	Add some slides that present the SCOOP 2 paradigm.
	
	* doc/latex/paradigm/slides.tex: New.
	* doc/latex/paradigm/figures: New.
	* doc/latex/paradigm/figures/zoomin.fig: New.
	* doc/latex/paradigm/figures/vt2.fig: New.
	* doc/latex/paradigm/figures/harder0x.fig: New.
	* doc/latex/paradigm/figures/simplescoop1.fig: New.
	* doc/latex/paradigm/figures/concepts.fig: New.
	* doc/latex/paradigm/figures/alt.fig: New.
	* doc/latex/paradigm/figures/simplegp.fig: New.
	* doc/latex/paradigm/figures/evolution.fig: New.
	* doc/latex/paradigm/figures/simpledeco.fig: New.
	* doc/latex/paradigm/figures/simpleoo.fig: New.
	* doc/latex/paradigm/figures/glance.fig: New.
	* doc/latex/paradigm/figures/getset.fig: New.
	* doc/latex/paradigm/figures/simple0x.fig: New.
	* doc/latex/paradigm/figures/simpleoovt.fig: New.
	* doc/latex/paradigm/figures/corn.fig: New.
	* doc/latex/paradigm/figures/simplevt.fig: New.
	* doc/latex/paradigm/figures/selectors.fig: New.
	* doc/latex/paradigm/figures/scoop1a.fig: New.
	* doc/latex/paradigm/figures/harddeco.fig: New.
	* doc/latex/paradigm/figures/design.fig: New.
	* doc/latex/paradigm/figures/vt1.fig: New.
	* doc/latex/paradigm/wewant.tex: New.
	* doc/latex/paradigm/myhyperref.sty: New.
	* doc/latex/paradigm/atour.tex: New.
	* doc/latex/paradigm/numberslides.sty: New.
	* doc/latex/paradigm/newalg.sty: New.
	* doc/latex/paradigm/Makefile: New.
	* doc/latex/paradigm/sequel.tex: New.

	Update the tiny examples.

	* doc/tiny/local/scoop.hh
	(true_, false_): Turn from bexpr_ to static Boolean values.
	(stc_equip_namespace): Remove the namespace arg.
	(tag, delegatee_type): Rename as...
	(behavior, delegatee): ...these.
	(any): New in scooped namespaced.
	(top): Remove category so it can be "not found" by default.
	(concept_): Remove; just use "any" instead.
	(impl): Split some parts into...
	(get_impl, set_impl): ...these new classes.
	(stc_is, stc_is_not): New macros.
	(stc_Header, stc_End): New macros.
	* doc/tiny/a_la_scoop_1/main.cc: Add commentary.
	* doc/tiny/a_la_scoop_1/main.cc: Add commentary.
	* doc/tiny/a_la_scoop_2/main.cc: Update.
	* doc/tiny/a_la_scoop_2/desugar.cc: Update.
	* doc/tiny/a_la_scoop_1_plus/main.cc: Update.
	* doc/tiny/more_scoop_2/identity.hh: Update.
	* doc/tiny/more_scoop_2/main.cc: Update.
	* doc/tiny/local/scoop.hh: Update.
	* doc/tiny/local/undefs.hh: Update.

	Move some code into independent files.
	
	* doc/tiny/more_scoop_2/reverse_iterator.hh: New.
	* doc/tiny/more_scoop_2/concepts.hh: New.

2007-02-06  Roland Levillain  <roland@lrde.epita.fr>

	Fix mini-oln.

	* samples/mini-oln/mini-oln.cc: Remove useless forward
	declarations.
	s/mlc::undefined/stc::abstract/
	Aesthetic changes.
	(oln::Image_with_neighborhood): New abstraction.
	(oln::point3d): Fix base class.
	(oln::image_with_nbh): Remove (useless).
	(oln::niter2d, oln::neighborhood2d): New.
	(oln::set_super_type< image_morpher<E> >, oln::image_morpher<E>):
	Fix base class.
	(oln::image_morpher<E>::delegatee_t): Query the virtual type from
	the exact type.
	(oln::set_super_type< plus<I, N> >): Fix base class.
	(oln::vtypes< plus<I, N> >::nbh_type)
	(oln::vtypes< plus<I, N> >::niter_type): New vtypes.
	(oln::plus::plus): Call the ctor of the base class.
	(oln::plus::impl_nbh): New.
	(main): New tests.

2007-02-06  Thomas Moulard  <thomas.moulard@lrde.epita.fr>

	Fix misc mistakes.
	* samples/mini-oln/README: Add newline.
	* samples/mini-oln/mini-oln.cc: Fix misc mistakes
                (name resolution, SCOOP paradigm, typo).

2007-02-05  Thomas Moulard  <thomas.moulard@lrde.epita.fr>

	Fix type resolution and misc bugs.
	* samples/mini-oln/mini-oln.cc: Fix type resolution and misc bugs.

2007-02-05  Thierry GERAUD  <theo@tegucigalpa.lrde.epita.fr>

	Add a README and a "SCOOP 1+" translation in doc/tiny.
	
	* doc/tiny/a_la_scoop_1_plus: New.
	* doc/tiny/README: New.
	* doc/tiny/local/scoop.hh (Concept): Rename as...
	(concept_): ...this.
	(stc_equip_namespace): Add "vtypes< stc::any<E> >" so
	that we can have SCOOP 1 with SCOOP 2 tools.
	(stc_deferred): New.
	* doc/tiny/a_la_scoop_2/main.cc: Update. 
	* doc/tiny/a_la_scoop_2/desugar.cc: Update.
	* doc/tiny/more_scoop_2/main.cc: Update.
	(reference): New.
	* doc/tiny/design/main.cc (is_valid): Fix sig.

2007-02-02  Thierry GERAUD  <theo@tegucigalpa.lrde.epita.fr>

	Clean stc/doc/tiny.

	* doc/tiny/more_scoop_2/undefs.hh: Rename as...
	* doc/tiny/local/undefs.hh: ...this.
	* doc/tiny/a_la_scoop_1/local_scoop.hh: Rename as...
	* doc/tiny/a_la_scoop_1/scoopy.hh: ...this.
	* doc/tiny/more_scoop_2/local_scoop.hh: Rename as...
	* doc/tiny/local/scoop.hh: ...this.
	(stc::true_, stc::false_): New.
	(stc_prop): Update.
	(stc_decl_associated_type): New.
	* doc/tiny/a_la_scoop_2/local_scoop.hh: Remove.
	* doc/tiny/a_la_scoop_1/main.cc,
	(Current, Super): Rename as...
	(current, super): ...this to be coherent with SCOOP 2.
	* doc/tiny/a_la_scoop_1/scoopy.hh,
	Likewise.
	* doc/tiny/a_la_scoop_1/desugar.cc,
	Likewise.
	* doc/tiny/a_la_scoop_2/main.cc,
	* doc/tiny/a_la_scoop_2/desugar.cc,
	* doc/tiny/more_scoop_2/main.cc,
	* doc/tiny/cpp_with_virtual_types/main.cc,
	* doc/tiny/design/main.cc,
	(category): New type in array_iterator.
	* doc/tiny/cpp_with_concepts/main.cc,
	* doc/tiny/classical/main.cc,
	* doc/tiny/generic_programming/main.cc: Update and
	add copyright header.
	
2007-02-02  Roland Levillain  <roland@lrde.epita.fr>

	Automate the compilation of mini-oln.

	* samples/mini-oln/mini-oln.cc: Remove compilation
	usage in comment.
	(oln::Iterator::is_valid, oln::Image::has)
	(oln::Image2d::nrows_get, oln::Image2d::ncols_get)
	(oln::Image3d::nrows_get, oln::Image3d::ncols_get)
	(oln::Image3d::nslis_get, oln::image_base::has): Add missing
	return keywords.
	(oln::image_with_nbh::nbh): Disable method.
	* Makefile.am (SUBDIRS): Add samples.
	* samples/mini-oln/concept-c++/mini-oln.cc: Likewise.
	* samples/Makefile.am,
	* samples/mini-oln/Makefile.am,
	* samples/mini-oln/concept-c++/Makefile.am: New.

2007-02-02  Roland Levillain  <roland@lrde.epita.fr>

	Improve the Point2d and Point3d concepts in mini-oln.

	* samples/mini-oln/concept-c++/mini-oln.cc
	(concepts::Point2d, concepts::Point3d): Enrich them.
	(concept_map Point2d<oln::point2d>)
	(concept_map Point3d<oln::point3d>): Adjust.
	(oln::point2d::coord_type, oln::point3d::coord_type): New
	typedefs.
	(oln::point2d::row, oln::point2d::col)
	(oln::point3d::row, oln::point3d::col, oln::point3d::sli): Use it.

2007-02-01  Roland Levillain  <roland@lrde.epita.fr>

	Add a first C++0x concept-based version of mini-oln.

	* samples/mini-oln/concept-c++/mini-oln.cc: New.

2007-02-01  Roland Levillain  <roland@lrde.epita.fr>

	Fix mini-oln.

	* samples/mini-oln/mini-oln.cc: Move all Olena classes into the
	namespace `oln'.
	(main): Adjust.
	(oln::image2d::has): Make it const.
	Remove semicolons following the closing parenthesis of a
	namespace.
	Aesthetic changes.
	* stc/scoop.hh: Replace every occurrence of `where' (as a template
	parameter) with `location', to comply with the upcoming C++0x
	standard.

2007-02-01  Thierry GERAUD  <theo@tegucigalpa.lrde.epita.fr>

	Add a tiny example to stress differences between paradigms.
	
	* stc/doc/tiny/: New.
	* stc/scoop.hh (stc_scoop_equipment_for_namespace): Rename
	SCOOPED_NAMESPACE::internal as SCOOPED_NAMESPACE::stc_vtype_internal.

2007-01-30  Roland Levillain  <roland@lrde.epita.fr>

	Rename stc/scoop2.hh as	stc/scoop-alt.hh.
	Encapsulate the contents of SCOOPED_NAMESPACE in
	stc_scoop_equipment_for_namespace.

	* stc/scoop2.hh: Rename as...
	* stc/scoop-alt.hh: ...this.
	Adjust header guards.
	(ERROR::IN_find__VIRTUAL_TYPE_IS_ABSTRACT)
	(ERROR::IN_find_local__VIRTUAL_TYPE_MULTIPLY_DEFINED)
	(ERROR::IN_merge2__FINAL_VIRTUAL_TYPE_REDEFINED_ABSTRACT)
	(ERROR::IN_merge2__FINAL_VIRTUAL_TYPE_REDEFINED_FINAL)
	(ERROR::IN_merge2__FINAL_VIRTUAL_TYPE_REDEFINED)
	(ERROR::IN_merge2__VIRTUAL_TYPE_REDEFINED_ABSTRACT)
	(ERROR::IN_merge3__FINAL_VIRTUAL_TYPE_REDEFINED_ABSTRACT)
	(ERROR::IN_merge3__VIRTUAL_TYPE_REDEFINED_ABSTRACT)
	(ERROR::IN_merge3__LOCAL_DECLARATION_OF_NOT_DELEGATED_AND_ABSTRACT)
	(ERROR::IN_merge3__FINAL_VIRTUAL_TYPE_REDEFINED_FINAL)
	(ERROR::IN_merge3__FINAL_VIRTUAL_TYPE_REDEFINED): Rename as...
	(ERROR::IN_find_VIRTUAL_TYPE_IS_ABSTRACT)
	(ERROR::IN_find_local_VIRTUAL_TYPE_MULTIPLY_DEFINED)
	(ERROR::IN_merge2_FINAL_VIRTUAL_TYPE_REDEFINED_ABSTRACT)
	(ERROR::IN_merge2_FINAL_VIRTUAL_TYPE_REDEFINED_FINAL)
	(ERROR::IN_merge2_FINAL_VIRTUAL_TYPE_REDEFINED)
	(ERROR::IN_merge2_VIRTUAL_TYPE_REDEFINED_ABSTRACT)
	(ERROR::IN_merge3_FINAL_VIRTUAL_TYPE_REDEFINED_ABSTRACT)
	(ERROR::IN_merge3_VIRTUAL_TYPE_REDEFINED_ABSTRACT)
	(ERROR::IN_merge3_LOCAL_DECLARATION_OF_NOT_DELEGATED_AND_ABSTRACT)
	(ERROR::IN_merge3_FINAL_VIRTUAL_TYPE_REDEFINED_FINAL)
	(ERROR::IN_merge3_FINAL_VIRTUAL_TYPE_REDEFINED): ...these.
	(SCOOPED_NAMESPACE): Remove macro.
	(stc_scoop_equipment_for_namespace): New macro.
	Encapsulate the contents of SCOOPED_NAMESPACE within this macro.
	(stc_match_pair_0p_with, stc_match_pair_1p_with)
	(stc_match_pair_2p_with, stc_match_pair_1p_with_error)
	(stc_match_pair_2p_with_error)
	(stc_match_triple_0p_with, stc_match_triple_1p_with)
	(stc_match_triple_2p_with, stc_match_triple_3p_with)
	(stc_match_triple_2p_with_error, stc_match_triple_3p_with_error):
	Move and rename these macros as..
	* stc/internal/match-with.hh (stc_internal_match_pair_0p_with)
	(stc_internal_match_pair_1p_with, stc_internal_match_pair_2p_with)
	(stc_internal_match_pair_1p_with_error)
	(stc_internal_match_pair_2p_with_error)
	(stc_internal_match_triple_0p_with)
	(stc_internal_match_triple_1p_with)
	(stc_internal_match_triple_2p_with)
	(stc_internal_match_triple_3p_with)
	(stc_internal_match_triple_2p_with_error)
	(stc_internal_match_triple_3p_with_error): ...these (new file).
	* stc/Makefile (nobase_stc_HEADERS): Remove scoop2.hh.
	Add scoop-alt.hh and internal/match-with.hh.

	* tests/scoop2.cc: Rename as...
	* tests/scoop-alt.cc: ...this.
	Adjust.
	(stc_scoop_equipment_for_namespace): Invoke it.
	* tests/super.cc (my::set_pseudosuper_type<C>): Remove.
	(my::vtypes<C>::delegatee_type): New.
	* tests/Makefile.am (nobase_stc_HEADERS): Add
	internal/match-with.hh.
	(scoop2_SOURCES): Remove.
	(scoop_alt_SOURCES): New.

2007-01-30  Thierry GERAUD  <theo@tegucigalpa.lrde.epita.fr>

	Add mini-std.
	
	* samples/mini-std: New.
	* samples/mini-oln/design.hh: New.

2007-01-26  Roland Levillain  <roland@lrde.epita.fr>

	Polish stc/scoop2.hh.
	The work is far from beeing finished; we still have to address
	the problem of deferred virtual types.

	* doc/algorithms.ml: Add a new (non working) example.
	Typos.
	* stc/scoop.hh (stc_find_deduce_vtype): Add a missing argument.
	* stc/scoop2.hh (stc::none): New.
	(stc::is_found_, stc::is_not_found_): New.
	(SCOOPED_NAMESPACE): Set to oln.
	(stc_match_pair_0p_with, stc_match_pair_1p_with
	(stc_match_pair_2p_with, stc_match_pair_1p_with_error)
	(stc_match_pair_2p_with_error): New macros.
	(merge2_): Use them to simplify this struct.
	(stc_match_triple_0p_with, stc_match_triple_1p_with)
	(stc_match_triple_2p_with, stc_match_triple_3p_with)
	(stc_match_triple_2p_with_error, stc_match_triple_3p_with_error):
	New macros.
	(merge3_): Use them to simplify this struct.
	(find): Rename struct as...
	(find_vtype): ...this.
	(vtype): New struct.
	(stc_deferred_vtype, stc_vtype_, stc_vtype)
	(stc_find_deduce_vtype_, stc_find_deduce_vtype)
	(stc_deduce_deferred_vtype, stc_deduce_vtype_, stc_deduce_vtype):
	New macros.

2007-01-26  Thomas Moulard  <thomas.moulard@lrde.epita.fr>

	Add mini-oln.
	* samples/mini-oln/README: Add mini-oln. New.
	* samples/mini-oln/mini-oln.cc: Idem. New.
	* samples/mini-oln: Idem. New.
	* samples: Idem. New.

2007-01-11  Thomas Moulard  <thomas.moulard@lrde.epita.fr>

	Fix some tests.
	* tests/vtypes-and-exact.cc: Fix macro.
	* tests/vtypes.cc: Fix macro.

2006-12-14  Roland Levillain  <roland@lrde.epita.fr>

	New prototype for SCOOP 2 algorithms.

	* stc/scoop2.hh: New (prototype).
	* tests/scoop2.cc: New test.
	* stc/Makefile.am (nobase_stc_HEADERS): Add scoop2.hh
	* tests/Makefile.am (check_PROGRAMS): Add scoop2.
	(scoop2_SOURCES): New.

2006-12-14  Roland Levillain  <roland@lrde.epita.fr>

	Improve SCOOP 2 documentation and prototype.

	* doc/algorithms.ml (merge2): Reorder patterns as in merge3.
	Aesthetic changes.
	(merge3): Aesthetic changes.
	* doc/algorithms.txt: Adjust.
	* doc/rules.txt: Typos.
	Improve the last two examples.

2006-12-12  Roland Levillain  <roland@lrde.epita.fr>

	More examples in doc/algorithms.ml.

	* doc/algorithms.ml (find_rec): Handle abstract delegatee.
	Add Olena-like examples.
	Aesthetic changes.
	* doc/algorithms.txt (Top-down approach): Document `find'.
	(Bottom-up approach): Move section at the end of the file.

2006-12-11  Roland Levillain  <roland@lrde.epita.fr>

	Start a draft of Static's documentation.

	* doc/README, doc/intro.txt, doc/rules.txt, doc/scool.txt,
	* doc/algorithms.txt: New.
	* doc/algorithms.ml: New (prototype of Static's type-checking rules,
	written in Objective Caml).

	* stc/scoop.hh: Typos, FIXMEs.

2006-12-01  Roland Levillain  <roland@lrde.epita.fr>

	* stc/scoop.hh: Convert to Unix line terminators.

2006-11-30  Thierry GERAUD  <theo@tegucigalpa.lrde.epita.fr>

	* stc/scoop.hh (stc_scoop_equipment_for_namespace): Rewrite.

2006-11-17  Roland Levillain  <roland@lrde.epita.fr>

	Catch up with the new SCOOP 2 implementation.

	* tests/super.cc, tests/vtypes.cc
	* tests/vtypes-and-exact.cc: Adjust tests to catch up with the new
	stc/scoop.hh.
	* stc/Makefile.am (EXTRA_DIST): Add was.scoop.hh.
	* tests/Makefile.am
	(check_PROGRAMS): Remove multiple-supers and
	vtypes-multiple-supers.
	(multiple_supers_SOURCES, vtypes_multiple_supers_SOURCES): Remove.
	(EXTRA_DIST): New.
	Add multiple-supers.cc and vtypes-multiple-supers.cc.

2006-11-14  Thierry GERAUD  <theo@tegucigalpa.lrde.epita.fr>

	Simplify scoop facilities.

	* stc/scoop.hh: Rename as...
	* stc/was.scoop.hh: ...this new file.
	* stc/scoop.hh: New version.

2006-10-31  Roland Levillain  <roland@lrde.epita.fr>

	* tests/Makefile.am: Alter AM_CXXFLAGS instead of CXXFLAGS.
	* stc/scoop.hh: Fix comment.

2006-10-09  Thierry GERAUD  <theo@tegucigalpa.lrde.epita.fr>

	* stc/scoop.hh (stc_virtual_typedef): Remove this macro which
	cannot be consistent wrt to client namespaces.

2006-10-09  Thierry GERAUD  <theo@tegucigalpa.lrde.epita.fr>

	* stc/scoop.hh (stc_virtual_typedef): Fix macro.

2006-09-29  Roland Levillain  <roland@lrde.epita.fr>

	Use TESTS_CXXFLAGS in Static.

	* tests/Makefile.am (TESTS_CXXFLAGS): New.
	Append it to...
	(CXXFLAGS): ...this variable.
	* tests/tour.cc (dynamic_hierarchy::A, dynamic_hierarchy::B)
	(dynamic_hierarchy::C): Add missing virtual destructors.

2006-09-29  Roland Levillain  <roland@lrde.epita.fr>

	Work around a bug in g++ 4.1 and 4.2 in tests/vtypes-and-exact.cc.

	* tests/vtypes-and-exact.cc (my_direct_type_of),
	(my_direct_type_of_): New macros.
	(my::A::foo_type, my::A::bar_type, my::A::baz_type)
	(my::B::foo_type, my::B::bar_type, my::B::baz_type)
	(my::B::quux_type, my::B::yin_type)
	(my::C::foo_type, my::C::quux_type, my::C::zorg_type): Rename
	typedefs as...
	(my::A::foo_t, my::A::bar_t, my::A::baz_t)
	(my::B::foo_t, my::B::bar_t, my::B::baz_t)
	(my::B::quux_t, my::B::yin_t)
	(my::C::foo_t, my::C::quux_t, my::C::zorg_t): ...this.
	Use my_direct_type_of and my_direct_type_of_ (on the exact type)
	instead of my_type_of and my_type_of_ (on the ``self'', current
	type) to work around a bug in g++ 4.1 and 4.2.
	(main): Adjust.
	* tests/Makefile.am (AM_CXXFLAGS): Rename as...
	(CXXFLAGS): ...this.

2006-09-28  Roland Levillain  <roland@lrde.epita.fr>

	* stc/any.hh, stc/entry.hh, stc/exact.hh, stc/find_exact.hh,
	* stc/scoop.hh, stc/valist_aggregator.hh,
	* stc/internal/extract_vtype_from_list.hh: Adjust header guards to
	match the file name.

2006-09-28  Roland Levillain  <roland@lrde.epita.fr>

	Get rid of the handling of automatically retrieved implementations.

	* stc/scoop.hh (automatic::impl): Remove.
	The handling of automatically retrieved implementations is
	now the responsibility of the ``client'' (here, Olena).

2006-09-27  Thierry GERAUD  <theo@tegucigalpa.lrde.epita.fr>

	Enforce safety in some SCOOP tools.

	* stc/scoop.hh (stc_set_nth_super, stc_set_super): Add
	"end of semicolon" safety.
	(stc_virtual_typedef): Use oln_check_type_of instead of
	oln_type_of.

2006-09-27  Roland Levillain  <roland@lrde.epita.fr>

	* tests/Makefile.am (AM_CXXFLAGS): Set to -O0 -ggdb.

2006-09-26  Roland Levillain  <roland@lrde.epita.fr>

	Rename stc/vtypes.hh as stc/scoop.hh.

	* stc/vtypes.hh: Rename as...
	* stc/scoop.hh: ..this.
	Adjust headers guards.
	(stc_equip_namespace_with_vtypes): Pass the enclosing namespace as
	an argument of this macro.
	Rename as...
	(stc_scoop_equipment_for_namespace): ...this.
	Adjust.
	(stc::abstraction_as_type): Remove.
	* tests/super.cc, tests/multiple-supers.cc,
	* tests/vtypes.cc, tests/vtypes-and-exact.cc,
	* tests/vtypes-multiple-supers.cc: Adjust.

2006-09-25  Roland Levillain  <roland@lrde.epita.fr>

	Add a version of type_of_ checking that the vtype is actually found.

	* stc/vtypes.hh (stc::ERROR::NO_VALID_VIRTUAL_TYPE_FOUND),
	(stc::ERROR::NO_VALID_RETURN_TYPE_FOR_type_of_): Remove.
	(stc::ERROR::VIRTUAL_TYPE_NOT_FOUND): New.
	(check_direct_type_of_, check_type_of_): New.
	(stc_check_type_of, stc_check_type_of_)
	(stc_check_direct_type_of, stc_check_direct_type_of_): New macros.

2006-09-25  Roland Levillain  <roland@lrde.epita.fr>

	Keep type_of_ its original semantics, and be consistent with macro
	names.

	* stc/vtypes.hh (type_of_): Rename as...
	(direct_type_of_): ...this.
	(exact_type_of_): Rename as...
	(type_of_): ...this.
	(stc_type_of_, stc_direct_type_of_): Adjust macros.

2006-09-24  Roland Levillain  <roland@lrde.epita.fr>

	Provide two versions of type_of_: one working on `from_type'
	directly (new behavior), the other working on its exact type (old
	behavior).

	* stc/vtypes.hh (type_of_): Don't perform the virtual type
	retrieval on the exact type of `from_type', use it directly.
	(exact_type_of_): New.
	Perform a virtual type retrieval using the exact type of
	`from_type' (i.e., implement the previous behavior of type_of_).
	(stc_type_of): Adjust macro.
	(stc_direct_type_of, stc_direct_type_of_): New macros.
	(stc_local_type_of, stc_local_type_of_): Remove these macros, as
	they are used nowhere (but in tests), and are just (useless) sugar
	for `stc_type_of' and `stc_type_of_'.
	* tests/vtypes.cc (my_type_of_)
	* tests/vtypes-and-exact.cc (my_type_of_)
	* tests/vtypes-multiple-supers.cc (my_type_of_): Adjust.

2006-09-20  Roland Levillain  <roland@lrde.epita.fr>

	* stc/vtypes.hh (stc_equip_namespace_with_vtypes): Swap the
	definitions of single_vtype and ext_vtype (for aesthetic purpose
	only).

2006-09-18  Roland Levillain  <roland@lrde.epita.fr>

	Make virtual type retrieval more flexible and fix automatic::impl.

	* stc/vtypes.hh (automatic::impl): Turn the first parameter into a
	`template <class> class'.
	(select_typedef): Typo in comment.
	Don't abort on default case; not finding a virtual type is no
	lomger a static error, but instead just gives mlc::not_found.
	(type_of_): Likewise, don't abort on mlc::not_found, just return
	it.

2006-09-15  Roland Levillain  <roland@lrde.epita.fr>

	Add a default (empty) class for automatically retrieved
	implementations.

	* stc/vtypes.hh (automatic::impl): New.

2006-09-13  Roland Levillain  <roland@lrde.epita.fr>

	Improve the static error messages of the virtual type retrieval
	mechanism.

	* stc/vtypes.hh
	(VIRTUAL_TYPE_MULTIPLY_DEFINED_AS_INTERNAL_AND_SINGLE)
	(VIRTUAL_TYPE_MULTIPLY_DEFINED_AS_INTERNAL_AND_EXTERNAL)
	(VIRTUAL_TYPE_MULTIPLY_DEFINED_AS_SINGLE_AND_EXTERNAL)
	(VIRTUAL_TYPE_MULTIPLY_DEFINED_AS_INTERNAL_AND_SINGLE_AND_EXTERNAL)
	(NO_VALID_VIRTUAL_TYPE_FOUND): New error messages.
	(select_typedef): Add specializations for erroneous cases.

2006-09-13  Roland Levillain  <roland@lrde.epita.fr>

	Remove packed_vtypes.

	* stc/vtypes.hh (packed_vtypes_in_category, packed_vtypes):
	Remove.
	* tests/vtypes.cc
	(my::packed_vtypes_in_category<category::my_cat, T>): Remove
	(my::A::~A, , my::B::~B, my::C::~C): Remove dtors.
	* tests/vtypes-and-exact.cc
	(my::packed_vtypes_in_category<category::my_cat, T>): Remove.
	(my::A::~A, , my::B::~B, my::C::~C): Remove dtors.
	* tests/vtypes-multiple-supers.cc
	(my::packed_vtypes_in_category<category::my_cat, T>): Remove.
	(my::A::~A, , my::B::~B, my::C::~C): Remove dtors.

2006-09-06  Thierry GERAUD  <theo@tegucigalpa.lrde.epita.fr>

	New macro to declare virtual types in abstract classes.

	* stc/vtypes.hh (stc_virtual_typedef): New.

2006-09-04  Roland Levillain  <roland@lrde.epita.fr>

	Rename virtual types classes.

	* stc/vtypes.hh (vtypes, single_vtype, ext_vtype): Rename as...
	(vtypes_in_category, single_vtype_in_category, ext_vtype_in_category):
	...this.
	(vtypes_, single_vtype_, ext_vtype_): Rename as...
	(vtypes, single_vtype, ext_vtype): ...this.
	(packed_vtypes): Rename as...
	(packed_vtypes_in_category): ...this.
	(packed_vtypes_): Rename as...
	(packed_vtypes): ...this
	* tests/vtypes.cc, tests/vtypes-and-exact.cc,
	* tests/vtypes-multiple-supers.cc: Adjust.

2006-09-04  Roland Levillain  <roland@lrde.epita.fr>

	Add a third kind of structure for virtual types to avoid endless
	recursions when their definitions involve the knowledge of the
	exact type of the class these virtual types belong to.

	* stc/vtypes.hh (single_vtype, single_vtype_): New template
	class.
	(internal::tag::single): New.
	(internal::tag::external): Rename as...
	(internal::tag::extended): ...this.
	(get_vtype_helper): Adjust and extended for internal::tag::single.
	(select_typedef): Extended retrieval algorithm.
	(type_of_): Likewise.
	Check the return type of the algorithm.
	More documentation.
	s/external/extended/.
	* tests/vtypes.cc: Conform to the new terminology.
	* tests/vtypes-multiple-supers.cc: Adjust.
	* tests/vtypes-and-exact.cc: Likewise.
	Aesthetic changes.
	(main): Exercize stc::is_any_.
	* stc/valist_aggregator.hh (valist_aggregator): Use virtual
	inheritance.

2006-09-01  Thierry GERAUD  <theo@tegucigalpa.lrde.epita.fr>

	Add materials to handle types without category.

	* stc/vtypes.hh (stc_equip_namespace_with_vtypes): Add
	ext_vtype_ and packed_vtypes_ for types without category.
	(ext_vtype, packed_vtypes): Add specializations for
	category being void.

2006-08-30  Thierry GERAUD  <theo@tegucigalpa.lrde.epita.fr>

	Fix missing typedefs and handle types without category.

	* stc/any.hh (any__best_speed): Add typedef exact_type.
	(any__best_memory): Likewise.
	* stc/vtypes.hh (stc_equip_namespace_with_vtypes): Add 'vtypes_'
	and the specialization 'vtypes<void, from_type>' for definitions
	of associated types from types that do not have any category.

2006-06-15  Roland Levillain  <roland@lrde.epita.fr>

	Document method checks in Static tour.

	* tests/tour.cc (static_hierarchy_with_methods::test): Rename
	as...
	(static_hierarchy_with_methods::test1): ...this.
	(main): Adjust.
	(static_hierarchy_with_methods::D): New.
	(static_hierarchy_with_methods::test2): New.
	(static_hierarchy_with_method_checks): New section.
	Add a reference (Concept Checking).

2006-06-15  Roland Levillain  <roland@lrde.epita.fr>

	More on SCOOP methods in Static tour.

	* tests/tour.cc (dynamic_hierarchy::A::foo)
	(dynamic_hierarchy::A::bar, dynamic_hierarchy::B::foo)
	(dynamic_hierarchy::B::bar, dynamic_hierarchy::C::foo): Return an
	int value.
	(static_hierarchy_with_methods::A::foo)
	(static_hierarchy_with_methods::A::impl_foo)
	(static_hierarchy_with_methods::A::bar)
	(static_hierarchy_with_methods::B::impl_foo)
	(static_hierarchy_with_methods::B::impl_bar)
	(static_hierarchy_with_methods::C::impl_foo): Likewise.
	(static_hierarchy_with_methods): Add comments.
	(static_hierarchy_with_methods::test): New.
	(main): Call it.

2006-06-14  Roland Levillain  <roland@lrde.epita.fr>

	More on the retrieval of and the conversion to the exact type in
	Static tour.

	* tests/tour.cc (static_hierarchy_with_any): More on the retrieval
	of and the conversion to the exact type.
	(main): Run dynamic tests.
	(static_hierarchy_with_any::A)
	(static_hierarchy_with_a_non_leaf_concrete_class::A)
	(static_hierarchy_with_methods::A): Use stc::any instead of
	stc::any__simple.

2006-06-14  Roland Levillain  <roland@lrde.epita.fr>

	Add stc_to_exact and stc_to_exact_ macros.

	* stc/exact.hh (stc_to_exact, stc_to_exact_): New macros.
	* stc/vtypes.hh (type_of_): Use the stc_to_exact macro instead
	of stc::to_exact_.
	* tests/exact.cc (main): Perform additional static tests.
	* tests/find_exact.cc (main): Use the stc_to_exact_ macro instead
	of stc::to_exact_.
	* tests/vtypes-and-exact.cc (main): Likewise
	Check the super classes.
	(A): Use stc::any instead of stc::any__simple.

2006-06-13  Roland Levillain  <roland@lrde.epita.fr>

	Document stc_find_exact and stc::itself in Static tour.

	* tests/tour.cc (dynamic_hierarchy, simple_static_hierarchy):
	(static_hierarchy_with_methods): Aesthetic changes.
	(static_hierarchy_with_any): Rephrase comments.
	(static_hierarchy_with_a_non_leaf_concrete_class): New section.

2006-06-12  Roland Levillain  <roland@lrde.epita.fr>

	* tests/tour.cc: Start a Static tour.

2006-06-12  Roland Levillain  <roland@lrde.epita.fr>

	Add stc_find_exact.

	* stc/find_exact.hh: New.
	* tests/find_exact.cc (main): New test.
	* stc/Makefile.am (nobase_stc_HEADERS): Add find_exact.hh.
	* tests/Makefile.am (check_PROGRAMS): Add find_exact.
	(find_exact_SOURCES): New.

2006-06-06  Roland Levillain  <roland@lrde.epita.fr>

	Perform virtual type retrieval using the exact type of a class.

	* stc/vtypes.hh (type_of_): Get the exact type of the
	``from_type'' class, and perform the retrieval on it (instead of
	from_type directly).
	* tests/vtypes-and-exact.cc: New test.
	* tests/Makefile.am (check_PROGRAMS): Add vtypes-and-exact.cc.
	(vtypes_and_exact_SOURCES): New.

2006-06-06  Roland Levillain  <roland@lrde.epita.fr>

	Perform additional tests on simple virtual types (no multiple
	inheritance nor use of stc::any).

	* tests/vtypes.cc: Aesthetic changes.
	(C): Rename as...
	(Z): ...this.
	Adjust.
	(Z::bar_type, Z::baz_type, Z::yin_type): New typedefs.
	(main): Check more virtual types.

2006-06-06  Roland Levillain  <roland@lrde.epita.fr>

	Complete the support of multiple inheritance in SCOOP: adjust the
	algorithm of virtual type retrieval to take multiple base classes
	into account.

	* stc/internal/extract_vtype_from_list.hh: New file.
	* stc/vtypes.hh: Include it.
	(ERROR::FIRST_PARAMETER_OF_rec_get_vtype_SHOULD_BE_A_TAG): Rename
	as...
	(ERROR::FIRST_PARAMETER_OF_rec_get_vtype_IS_NOT_A_TAG): ...this.
	(ERROR::FIRST_PARAMETER_OF_rec_get_vtype_from_list_IS_NOT_A_TAG)
	(ERROR::THIRD_PARAMETER_OF_rec_get_vtype_from_list_IS_NOT_A_LIST):
	New structs (error messages).
	(stc_internal_maybe_get_nth_super_type): New macro.
	(get_supers_list): Use it.
	(maybe_super_type): Rename as...
	(maybe_get_super_type): ...this.
	(get_vtype): Rename as...
	(get_vtype_helper): ...this.
	(stc_internal_rec_get_vtype): New macro.
	(rec_get_vtype_from_list): New struct.
	(rec_get_vtype): Use it to rewrite the retrieval algorithm to take
	multiple base classes into account.
	Complete static assertions on the nature of the first parameter
	(retrieval method tag).
	* stc/Makefile.am (nobase_stc_HEADERS): Add
	internal/extract_vtype_from_list.hh.

	* tests/vtypes-multiple-supers.cc: New test.
	* tests/Makefile.am (check_PROGRAMS): Add vtypes-multiple-supers.
	(vtypes_multiple_supers_SOURCES): New.

	* tests/vtypes.cc (packed_vtypes <category::my_cat, T>): Move this
	class just after the declaration of my::cat.

2006-06-05  Roland Levillain  <roland@lrde.epita.fr>

	Allow multiple super classes in SCOOP's static hierarchies.

	* stc/valist_aggregator.hh: New.
	* stc/vtypes.hh: Include it.
	(ERROR::PARAMETER_OF_get_super_types_helper_IS_NOT_A_VALID_VALIST):
	New struct.
	(set_super_type): Inherit from mlc::undefined by default.
	(internal::maybe_super_type, get_supers_list)
	(internal::get_super_types_helper, get_super_types)
	(rec_get_vtype): s/stc_super/stc_get_super/.
	s/stc_pseudosuper/stc_get_pseudosuper/.
	(stc_set_super): Remove previous definition of this macro, and
	make it a shortcut for...
	(stc_set_nth_super): ...this one (new).
	(stc_get_supers, stc_get_nth_super_, stc_get_nth_super_)
	(stc_get_super_, stc_get_super_): New macros.
	(stc_super, stc_super_): Remove macros.
	(stc_pseudosuper, stc_pseudosuper_): Rename macros as...
	(stc_get_pseudosuper, stc_get_pseudosuper_): ...these.
	* tests/super.cc, tests/multiple-supers.cc: New tests.
	* tests/vtypes.cc: s/stc_get_supers_/stc_get_supers/g.
	* stc/Makefile.am (nobase_stc_HEADERS): Add exact.hh
	and valist_aggregator.hh.
	* tests/Makefile.am (check_PROGRAMS): Add multiple-supers, super.
	(multiple_supers_SOURCES, super_SOURCES): New.

2006-06-05  Roland Levillain  <roland@lrde.epita.fr>

	Replace stc::internal::not_user_defined with mlc::undefined.

	* stc/entry.hh (internal::not_user_defined): Remove class.
	s/internal::not_user_defined/mlc::undefined/g.

2006-06-01  Roland Levillain  <roland@lrde.epita.fr>

	Factor the recursive retrieval in internal and external vtypes.

	* stc/vtypes.hh
	(stc::ERROR::FIRST_PARAMETER_OF_rec_get_vtype_SHOULD_BE_A_TAG):
	New.
	(tag::method, tag::internal, tag::external): New.
	(get_vtype): New.
	(rec_get_vtype): Handle both internal and external vtypes.
	(rec_ext_vtype): Remove.

2006-06-01  Roland Levillain  <roland@lrde.epita.fr>

	Enforce coding style in stc::exact.

	* stc/any.hh, tests/exact.cc: s/exact_t/exact_type/g.
	* stc/exact.hh: Likewise.
	s/case_t/case_type/.
	Remove superfluous `inline' qualifiers.

2006-06-01  Roland Levillain  <roland@lrde.epita.fr>

	Have tests/exact.cc be (actually) part of Static's test-suite.

	* stc/exact.hh: Aesthetic change.
	Fix copyright headers.
	* tests/exact.cc: Likewise.
	Fix an inclusion of header.
	* tests/Makefile.am (check_PROGRAMS): Add exact.
	(exact_SOURCES): New.
	* tests/any.cc: Aesthetic change.

2006-05-18  Thomas Moulard  <thomas.moulard@lrde.epita.fr>

	Add stc::exact.

	* stc/exact.hh: New. Implementation of stc::exact.
	* tests/exact.cc: New. Test suite of stc::exact.
	* stc/any.hh: Add a typedef exact_t in stc::any.

2006-04-26  Roland Levillain  <roland@lrde.epita.fr>

	Remove the mlc::eqv and mlc::neqv workarounds.

	* stc/vtypes.hh (mlc::eqv, mlc::neqv): Remove these workarounds.
	(mlc_eqv, mlc_neqv): Remove macros.
	(rec_get_vtype, rec_get_ext_vtype): No longer use these
	workarounds, and revert to mlc_eq and mlc_neq usage (since they
	have been fixed in Metalic).
	* tests/vtypes.cc (main): Adjust.

2006-04-25  Roland Levillain  <roland@lrde.epita.fr>

	Rename stc/properties.hh as stc/vtypes.hh.

	* stc/properties.hh: Rename as...
	* stc/vtypes.hh: ...this.
	(stc_equip_namespace_with_properties): Rename as...
	(stc_equip_namespace_with_vtypes): ...this.
	Adjust.
	* stc/Makefile.am (nobase_stc_HEADERS): Rename properties.hh as
	vtypes.hh.
	* tests/properties.cc: Rename as...
	* tests/vtypes.cc: ...this.
	Adjust.
	* tests/entry.cc: Adjust.
	* tests/Makefile.am (check_PROGRAMS): Rename properties as vtypes.
	(properties_SOURCES): Likewise.
	Rename variable as...
	(vtypes_SOURCES): ...this.

2006-04-25  Roland Levillain  <roland@lrde.epita.fr>

	Rename some Static entities.

	* stc/properties.hh (typeof_): Rename class as...
	(type_of_): ...this.
	(stc::is_a): Rename class as...
	(stc::abstraction_as_type): ...this.
	(stc_typeof, stc_typeof_, stc_typeof_in_namespace)
	(stc_typeof_in_namespace_): Rename macros as...
	(stc_local_type_of, stc_local_type_of_, stc_type_of)
	(stc_type_of_): ...these.
	* tests/properties.cc: Adjust test.
	* tests/entry.cc: Typos in comments.

2006-04-25  Roland Levillain  <roland@lrde.epita.fr>

	Allow the use of Metalic values as virtual types.

	* stc/properties.hh (mlc::eqv, mlc::neqv): New (workaround)
	classes.
	(mlc_eqv, mlc_neqv): New macros.
	(rec_get_vtype, rec_get_ext_vtype): Use them, to allow the use of
	Metalic values as virtual types.
	* tests/properties.cc: Ensure Metalic values can be valid
	virtual types.

2006-04-22  Roland Levillain  <roland@lrde.epita.fr>

	Add a facility for virtual types packing.

	* stc/properties.hh (packed_vtypes): New packing structure, to
	be specialized by the user.  When properly defined, this structure
	can be used to check if all the virtual types of a class are sound.
	* tests/properties.cc (my_type_of): New macro.
	Define a packed_vtypes structure for the top-most class (my::A) and
	check these virtual types in my::A's subclasses.

2006-04-20  Roland Levillain  <roland@lrde.epita.fr>

	Add an abstraction manipulator.

	* stc/properties.hh (std::is_a): New helper.
	(stc_super, stc_pseudosuper, stc_typeof): Simplify the definitions
	of these macros, using their ``underscored'' version.
	(stc_typeof_in_namespace, stc_typeof_in_namespace_): New macro.
	* tests/properties.cc: Typos in comments.

2006-03-23  Roland Levillain  <roland@lrde.epita.fr>

	Extensible entry points in a class hierarchy (first version).

	* stc/entry.hh: New.
	* tests/entry.cc: New test.
	* stc/Makefile.am (nobase_stc_HEADERS): Add entry.hh.
	* tests/Makefile.am (check_PROGRAMS): Add `entry'.
	(entry_SOURCES): New.

2006-03-22  Roland Levillain  <roland@lrde.epita.fr>

	Catch up with changes in Metalic.

	* stc/properties.hh (stc_equip_namespace_with_properties): Use
	mlc_bool to extract the value of mlc::abstract::bexpr's.
	* stc/properties.hh: Update test (use mlc::assert_).

2006-03-14  Roland Levillain  <roland@lrde.epita.fr>

	Set the pseudosuper link using a separate class instead of an
	internal virtual type.

	* stc/properties.hh (stc_equip_namespace_with_properties):
	Generate a set_pseudosuper_type struct.  Use it to get the
	pseudosuper links in recursive vtype retrieval algorithms.
	(stc_set_pseudosuper, stc_pseudosuper, stc_pseudosuper_): New
	macros.
	* tests/properties.cc: Adjust.

	 LocalWords:  typedefs oln ncols nrows typedef
	