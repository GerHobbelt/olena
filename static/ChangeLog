2006-06-01  Roland Levillain  <roland@lrde.epita.fr>

	Enforce coding style in stc::exact.

	* stc/any.hh, tests/exact.cc: s/exact_t/exact_type/g.
	* stc/exact.hh: Likewise.
	s/case_t/case_type/.
	Remove superfluous `inline' qualifiers.

2006-06-01  Roland Levillain  <roland@lrde.epita.fr>

	Have tests/exact.cc be (actually) part of Static's test-suite.

	* stc/exact.hh: Aesthetic change.
	Fix copyright headers.
	* tests/exact.cc: Likewise.
	Fix an inclusion of header.
	* tests/Makefile.am (check_PROGRAMS): Add exact.
	(exact_SOURCES): New.
	* tests/any.cc: Aesthetic change.

2006-05-18  Thomas Moulard  <thomas.moulard@lrde.epita.fr>

	Add stc::exact.

	* stc/exact.hh: New. Implementation of stc::exact.
	* tests/exact.cc: New. Test suite of stc::exact.
	* stc/any.hh: Add a typedef exact_t in stc::any.

2006-04-26  Roland Levillain  <roland@lrde.epita.fr>

	Remove the mlc::eqv and mlc::neqv workarounds.

	* stc/vtypes.hh (mlc::eqv, mlc::neqv): Remove these workarounds.
	(mlc_eqv, mlc_neqv): Remove macros.
	(rec_get_vtype, rec_get_ext_vtype): No longer use these
	workarounds, and revert to mlc_eq and mlc_neq usage (since they
	have been fixed in Metalic).
	* tests/vtypes.cc (main): Adjust.

2006-04-25  Roland Levillain  <roland@lrde.epita.fr>

	Rename stc/properties.hh as stc/vtypes.hh.

	* stc/properties.hh: Rename as...
	* stc/vtypes.hh: ...this.
	(stc_equip_namespace_with_properties): Rename as...
	(stc_equip_namespace_with_vtypes): ...this.
	Adjust.
	* stc/Makefile.am (nobase_stc_HEADERS): Rename properties.hh as
	vtypes.hh.
	* tests/properties.cc: Rename as...
	* tests/vtypes.cc: ...this.
	Adjust.
	* tests/entry.cc: Adjust.
	* tests/Makefile.am (check_PROGRAMS): Rename properties as vtypes.
	(properties_SOURCES): Likewise.
	Rename variable as...
	(vtypes_SOURCES): ...this.

2006-04-25  Roland Levillain  <roland@lrde.epita.fr>

	Rename some Static entities.

	* stc/properties.hh (typeof_): Rename class as...
	(type_of_): ...this.
	(stc::is_a): Rename class as...
	(stc::abstraction_as_type): ...this.
	(stc_typeof, stc_typeof_, stc_typeof_in_namespace)
	(stc_typeof_in_namespace_): Rename macros as...
	(stc_local_type_of, stc_local_type_of_, stc_type_of)
	(stc_type_of_): ...these.
	* tests/properties.cc: Adjust test.
	* tests/entry.cc: Typos in comments.

2006-04-25  Roland Levillain  <roland@lrde.epita.fr>

	Allow the use of Metalic values as virtual types.

	* stc/properties.hh (mlc::eqv, mlc::neqv): New (workaround)
	classes.
	(mlc_eqv, mlc_neqv): New macros.
	(rec_get_vtype, rec_get_ext_vtype): Use them, to allow the use of
	Metalic values as virtual types.
	* tests/properties.cc: Ensure Metalic values can be valid
	virtual types.

2006-04-22  Roland Levillain  <roland@lrde.epita.fr>

	Add a facility for virtual types packing.

	* stc/properties.hh (packed_vtypes): New packing structure, to
	be specialized by the user.  When properly defined, this structure
	can be used to check if all the virtual types of a class are sound.
	* tests/properties.cc (my_type_of): New macro.
	Define a packed_vtypes structure for the top-most class (my::A) and
	check these virtual types in my::A's subclasses.

2006-04-20  Roland Levillain  <roland@lrde.epita.fr>

	Add an abstraction manipulator.

	* stc/properties.hh (std::is_a): New helper.
	(stc_super, stc_pseudosuper, stc_typeof): Simplify the definitions
	of these macros, using their ``underscored'' version.
	(stc_typeof_in_namespace, stc_typeof_in_namespace_): New macro.
	* tests/properties.cc: Typos in comments.

2006-03-23  Roland Levillain  <roland@lrde.epita.fr>

	Extensible entry points in a class hierarchy (first version).

	* stc/entry.hh: New.
	* tests/entry.cc: New test.
	* stc/Makefile.am (nobase_stc_HEADERS): Add entry.hh.
	* tests/Makefile.am (check_PROGRAMS): Add `entry'.
	(entry_SOURCES): New.

2006-03-22  Roland Levillain  <roland@lrde.epita.fr>

	Catch up with changes in Metalic.

	* stc/properties.hh (stc_equip_namespace_with_properties): Use
	mlc_bool to extract the value of mlc::abstract::bexpr's.
	* stc/properties.hh: Update test (use mlc::assert_).

2006-03-14  Roland Levillain  <roland@lrde.epita.fr>

	Set the pseudosuper link using a separate class instead of an
	internal virtual type.

	* stc/properties.hh (stc_equip_namespace_with_properties):
	Generate a set_pseudosuper_type struct.  Use it to get the
	pseudosuper links in recursive vtype retrieval algorithms.
	(stc_set_pseudosuper, stc_pseudosuper, stc_pseudosuper_): New
	macros.
	* tests/properties.cc: Adjust.
