==================
Installation Notes
==================


This file contains information about the installation process of Olena.

   You can read the `README' file for general information about Olena.


Required Software
=================

Here is a non-exhaustive list of required software required to build
Olena successfully.

   * to compile the user examples:

        - a POSIX shell, like Bash

        - a decent C++ compiler, like GNU C++

        - a `make' utility, like GNU `make'

Optional:

   * to (re)compile the documentation:

        - a LaTeX distribution

        - the `listings' TeX package

        - the utility `convert' from ImageMagick

        - `hevea', a TeX to HTML conversion tool

        - latex2html

   * to use various image types:

        - Magick++

        - libtiff

        - GDCM

   * to develop _within_ Olena:

        - GNU Autoconf 2.61

        - GNU Automake 1.10

        - GNU Libtool 1.5.22

   * to develop _within_ Swilena:

        - SWIG

        - Python


Configuration
=============

In order to prepare the build process, you need to configure the source
tree.

   Assuming your Olena distribution is uncompressed in directory
`olena-1.0', follow these steps:

     % cd olena-1.0
     % mkdir _build
     % cd _build
     % ../configure

   The build process can be altered by a number of options you can pass
to the `configure' script. The following sections describe them.

   Additionally, if you are an Olena maintainer (a person who runs
`make distcheck'), _prefer setting `CXXFLAGS' as an environment
variable_: the flags given on the command line to `configure' are not
propagated to recursive runs by `make distcheck'.  Or better: use the
environment CONFIG_SITE to set up a configuration environment (see
Autoconf's manual).


Installation Path
-----------------

By default, Olena is installed in the standard "local" directory of
your system. This is usually `/usr/local' under Unix.

   You can change this path with the following flag:

      --prefix=<installation prefix>


Compiler Selection and Compilation Flags
----------------------------------------

By default, `configure' will try to use the first C++ compiler it
encounters on your system. If `CXX' is not set, it will look, in order,
for:

   - the value of the `CCC' environment variable,

   - the GNU C++ compiler (`g++'),

   - the `c++' or `gpp' commands on your system,

   - `aCC', the HP-UX standard C++ compiler,

   - the `CC', `cxx', `cc++' or `cl' commands on your system,

   - KAI's C++ compiler (`KCC'),

   - `RCC', `xlC_r' or `xlC'.

   You can override the detection system by passing your favorite
compiler name to `configure', as follows:

     % ../configure CXX=<your-favorite-C++-compiler>

   As an alternative, you can also set the environment variable `CXX'.


   For some compilers (GNU g++ and Intel's icpc to some extent) ,
`configure' will use default CXXFLAGS. You can override the default
C++ flags by giving `configure' your selection of flags:

     % ../configure CXXFLAGS="<your-favorite-flags>"


Additional Components
=====================

In additional to Milena, several build targets can be enabled.  These
parts are called "components", and you can obtain a list of them by
running:

     % ../configure --help

Olena ships with Trimesh, a third-party library that we have been
using to manipulate 3D meshes.  Eventually, we will drop Trimesh from
the distribution.

See README for more information on additional components.


Building
========

Once your build directory is `configure'd, you can run

     % make

to recursively build all the selected components.


   Additionally, you can build and run the test suite with:

     % make check

However, this process is time- and memory- consuming, and you probably
do not need it except if you are developing/debugging Olena.


Compiler Notes
==============

Olena has been tested on the following configurations:

System                       Compiler
GNU/Linux on IA-32           g++ (GNU GCC) 3.3, 3.4, 4.0, 4.1, 4.2 and 4.3
GNU/Linux on IA-32           icpc (Intel C/C++ Compiler) 10.1 and 11.0
GNU/Linux on AMD64/Intel 64  g++ (GNU GCC) 4.1
Mac OS X (10.5) on IA-32     g++ (GNU GCC) 4.0.1


Installing
==========

To install the Olena headers and additional files on your system, run:

      % make install

from the build directory.

   If not overridden with `--prefix', this will install:

   * the headers in `/usr/local/include/mln/',

   * some applications and tools in `/usr/local/bin/',

   * sample images and meshes in `/usr/local/share/olena/images/',

   * the documentation in `/usr/local/share/doc/olena/`

And optionally:

   * Swilena's Python bindings in `/usr/local/lib/python2.x/site-packages/',

   * Trimesh programs in `/usr/local/bin/',

   * Trimesh libraries in `/usr/local/lib/',

   * Trimesh headers in `/usr/local/share/trimesh/',


   You can later remove Olena from your system by running

      % make uninstall

from the build directory (if you have kept it).  We recommend the use
of GNU Stow (or any similar program) during the installation of Olena,
to make the uninstallation of Olena easier.
